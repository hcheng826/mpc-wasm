[package]
name = "mpc-wasm"
version = "0.1.0"
authors = ["hcheng826 <lilioo826@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
wasm-bindgen-futures = "0.4.33"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }
serde_json = "1.0"
surf = { version = "2.3.2", default-features = false } # this will compile
# surf = { version = "2.3.2", default-features = false, features = ["h1-client"] } # https://github.com/http-rs/surf/issues/345#issuecomment-1130317260
# surf = "2.3.2"
getrandom = { version = "0.2", features = ["js"] }
anyhow = "1"
serde = { version = "1.0", features = ["derive"] }
serde-wasm-bindgen = "0.4"
js-sys = "0.3.60"
futures = "0.3"
# structopt = "0.3"
round-based = { version = "0.1.4", features = ["dev"] }
async-sse = "5"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[dependencies.web-sys]
version = "0.3"
features = [
  "console",
]
